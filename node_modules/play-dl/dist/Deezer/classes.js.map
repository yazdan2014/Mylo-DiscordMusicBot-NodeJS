{"version":3,"file":"classes.js","sourceRoot":"","sources":["../../play-dl/Deezer/classes.ts"],"names":[],"mappings":"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","sourcesContent":["import { request } from '../Request';\r\n\r\ninterface DeezerImage {\r\n    xl: string;\r\n    big: string;\r\n    medium: string;\r\n    small: string;\r\n}\r\n\r\ninterface DeezerGenre {\r\n    name: string;\r\n    picture: DeezerImage;\r\n}\r\n\r\ninterface DeezerUser {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\n/**\r\n * Class for Deezer Tracks\r\n */\r\nexport class DeezerTrack {\r\n    id: number;\r\n    title: string;\r\n    shortTitle: string;\r\n    url: string;\r\n    durationInSec: number;\r\n    rank: number;\r\n    explicit: boolean;\r\n    previewURL: string;\r\n    artist: DeezerArtist;\r\n    album: DeezerTrackAlbum;\r\n    type: 'track' | 'playlist' | 'album';\r\n\r\n    /**\r\n     * true for tracks in search results and false if the track was fetched directly.\r\n     */\r\n    partial: boolean;\r\n\r\n    trackPosition?: number;\r\n    diskNumber?: number;\r\n    releaseDate?: Date;\r\n    bpm?: number;\r\n    gain?: number;\r\n    contributors?: DeezerArtist[];\r\n\r\n    constructor(data: any, partial: boolean) {\r\n        this.id = data.id;\r\n        this.title = data.title;\r\n        this.shortTitle = data.title_short;\r\n        this.url = data.link;\r\n        this.durationInSec = data.duration;\r\n        this.rank = data.rank;\r\n        this.explicit = data.explicit_lyrics;\r\n        this.previewURL = data.preview;\r\n        this.artist = new DeezerArtist(data.artist);\r\n        this.album = new DeezerTrackAlbum(data.album);\r\n        this.type = 'track';\r\n\r\n        this.partial = partial;\r\n\r\n        if (!partial) {\r\n            this.trackPosition = data.track_position;\r\n            this.diskNumber = data.disk_number;\r\n            this.releaseDate = new Date(data.release_date);\r\n            this.bpm = data.bpm;\r\n            this.gain = data.gain;\r\n            this.contributors = [];\r\n\r\n            data.contributors.forEach((contributor: any) => {\r\n                this.contributors?.push(new DeezerArtist(contributor));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the missing data for a partial {@link DeezerTrack}.\r\n     */\r\n    async fetch(): Promise<DeezerTrack> {\r\n        if (!this.partial) return this;\r\n\r\n        const response = await request(`https://api.deezer.com/track/${this.id}/`).catch((err: Error) => err);\r\n\r\n        if (response instanceof Error) throw response;\r\n        const jsonData = JSON.parse(response);\r\n\r\n        this.partial = false;\r\n\r\n        this.trackPosition = jsonData.track_position;\r\n        this.diskNumber = jsonData.disk_number;\r\n        this.releaseDate = new Date(jsonData.release_date);\r\n        this.bpm = jsonData.bpm;\r\n        this.gain = jsonData.gain;\r\n        this.contributors = [];\r\n\r\n        jsonData.contributors.forEach((contributor: any) => {\r\n            this.contributors?.push(new DeezerArtist(contributor));\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            title: this.title,\r\n            shortTitle: this.shortTitle,\r\n            url: this.url,\r\n            durationInSec: this.durationInSec,\r\n            rank: this.rank,\r\n            explicit: this.explicit,\r\n            previewURL: this.previewURL,\r\n            artist: this.artist,\r\n            album: this.album,\r\n            type: this.type,\r\n            trackPosition: this.trackPosition,\r\n            diskNumber: this.diskNumber,\r\n            releaseDate: this.releaseDate,\r\n            bpm: this.bpm,\r\n            gain: this.gain,\r\n            contributors: this.contributors\r\n        };\r\n    }\r\n}\r\n/**\r\n * Class for Deezer Albums\r\n */\r\nexport class DeezerAlbum {\r\n    id: number;\r\n    title: string;\r\n    url: string;\r\n    recordType: string;\r\n    explicit: boolean;\r\n    artist: DeezerArtist;\r\n    cover: DeezerImage;\r\n    type: 'track' | 'playlist' | 'album';\r\n    tracksCount: number;\r\n\r\n    /**\r\n     * true for albums in search results and false if the album was fetched directly.\r\n     */\r\n    partial: boolean;\r\n\r\n    upc?: string;\r\n    durationInSec?: number;\r\n    numberOfFans?: number;\r\n    releaseDate?: Date;\r\n    available?: boolean;\r\n    genres?: DeezerGenre[];\r\n    contributors?: DeezerArtist[];\r\n\r\n    tracks: DeezerTrack[];\r\n\r\n    constructor(data: any, partial: boolean) {\r\n        this.id = data.id;\r\n        this.title = data.title;\r\n        this.url = data.link;\r\n        this.recordType = data.record_type;\r\n        this.explicit = data.explicit_lyrics;\r\n        this.artist = new DeezerArtist(data.artist);\r\n        this.type = 'album';\r\n        this.tracksCount = data.nb_tracks;\r\n        this.contributors = [];\r\n        this.genres = [];\r\n        this.tracks = [];\r\n        this.cover = {\r\n            xl: data.cover_xl,\r\n            big: data.cover_big,\r\n            medium: data.cover_medium,\r\n            small: data.cover_small\r\n        };\r\n\r\n        this.partial = partial;\r\n\r\n        if (!partial) {\r\n            this.upc = data.upc;\r\n            this.durationInSec = data.duration;\r\n            this.numberOfFans = data.fans;\r\n            this.releaseDate = new Date(data.release_date);\r\n            this.available = data.available;\r\n\r\n            data.contributors.forEach((contributor: any) => {\r\n                this.contributors?.push(new DeezerArtist(contributor));\r\n            });\r\n\r\n            data.genres.data.forEach((genre: any) => {\r\n                this.genres?.push({\r\n                    name: genre.name,\r\n                    picture: {\r\n                        xl: `${genre.picture}?size=xl`,\r\n                        big: `${genre.picture}?size=big`,\r\n                        medium: `${genre.picture}?size=medium`,\r\n                        small: `${genre.picture}?size=small`\r\n                    }\r\n                });\r\n            });\r\n\r\n            const trackAlbum: any = {\r\n                id: this.id,\r\n                title: this.title,\r\n                cover_xl: this.cover.xl,\r\n                cover_big: this.cover.big,\r\n                cover_medium: this.cover.medium,\r\n                cover_small: this.cover.small,\r\n                release_date: data.release_date\r\n            };\r\n            data.tracks.data.forEach((track: any) => {\r\n                track.album = trackAlbum;\r\n                this.tracks.push(new DeezerTrack(track, true));\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the missing data for a partial {@link DeezerAlbum}.\r\n     */\r\n    async fetch(): Promise<DeezerAlbum> {\r\n        if (!this.partial) return this;\r\n\r\n        const response = await request(`https://api.deezer.com/album/${this.id}/`).catch((err: Error) => err);\r\n\r\n        if (response instanceof Error) throw response;\r\n        const jsonData = JSON.parse(response);\r\n\r\n        this.partial = false;\r\n\r\n        this.upc = jsonData.upc;\r\n        this.durationInSec = jsonData.duration;\r\n        this.numberOfFans = jsonData.fans;\r\n        this.releaseDate = new Date(jsonData.release_date);\r\n        this.available = jsonData.available;\r\n        this.contributors = [];\r\n        this.genres = [];\r\n        this.tracks = [];\r\n\r\n        jsonData.contributors.forEach((contributor: any) => {\r\n            this.contributors?.push(new DeezerArtist(contributor));\r\n        });\r\n\r\n        jsonData.genres.data.forEach((genre: any) => {\r\n            this.genres?.push({\r\n                name: genre.name,\r\n                picture: {\r\n                    xl: `${genre.picture}?size=xl`,\r\n                    big: `${genre.picture}?size=big`,\r\n                    medium: `${genre.picture}?size=medium`,\r\n                    small: `${genre.picture}?size=small`\r\n                }\r\n            });\r\n        });\r\n\r\n        const trackAlbum: any = {\r\n            id: this.id,\r\n            title: this.title,\r\n            cover_xl: this.cover.xl,\r\n            cover_big: this.cover.big,\r\n            cover_medium: this.cover.medium,\r\n            cover_small: this.cover.small,\r\n            release_date: jsonData.release_date\r\n        };\r\n        jsonData.tracks.data.forEach((track: any) => {\r\n            track.album = trackAlbum;\r\n            this.tracks.push(new DeezerTrack(track, true));\r\n        });\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            title: this.title,\r\n            url: this.url,\r\n            recordType: this.recordType,\r\n            explicit: this.explicit,\r\n            artist: this.artist,\r\n            cover: this.cover,\r\n            type: this.type,\r\n            upc: this.upc,\r\n            tracksCount: this.tracksCount,\r\n            durationInSec: this.durationInSec,\r\n            numberOfFans: this.numberOfFans,\r\n            releaseDate: this.releaseDate,\r\n            available: this.available,\r\n            genres: this.genres,\r\n            contributors: this.contributors,\r\n            tracks: this.tracks.map((track) => track.toJSON())\r\n        };\r\n    }\r\n}\r\n/**\r\n * Class for Deezer Albums\r\n */\r\nexport class DeezerPlaylist {\r\n    id: number;\r\n    title: string;\r\n    public: boolean;\r\n    url: string;\r\n    picture: DeezerImage;\r\n    creationDate: Date;\r\n    type: 'track' | 'playlist' | 'album';\r\n    creator: DeezerUser;\r\n    tracksCount: number;\r\n\r\n    partial: boolean;\r\n\r\n    description?: string;\r\n    durationInSec?: number;\r\n    isLoved?: boolean;\r\n    collaborative?: boolean;\r\n    fans?: number;\r\n\r\n    tracks: DeezerTrack[];\r\n\r\n    constructor(data: any, partial: boolean) {\r\n        this.id = data.id;\r\n        this.title = data.title;\r\n        this.public = data.public;\r\n        this.url = data.link;\r\n        this.creationDate = new Date(data.creation_date);\r\n        this.type = 'playlist';\r\n        this.tracksCount = data.nb_tracks;\r\n        this.tracks = [];\r\n\r\n        this.picture = {\r\n            xl: data.picture_xl,\r\n            big: data.picture_big,\r\n            medium: data.picture_medium,\r\n            small: data.picture_small\r\n        };\r\n\r\n        if (data.user) {\r\n            this.creator = {\r\n                id: data.user.id,\r\n                name: data.user.name\r\n            };\r\n        } else {\r\n            this.creator = {\r\n                id: data.creator.id,\r\n                name: data.creator.name\r\n            };\r\n        }\r\n\r\n        this.partial = partial;\r\n\r\n        if (!partial) {\r\n            this.description = data.description;\r\n            this.durationInSec = data.duration;\r\n            this.isLoved = data.is_loved_track;\r\n            this.collaborative = data.collaborative;\r\n            this.fans = data.fans;\r\n\r\n            if (this.public) {\r\n                this.tracks = data.tracks.data.map((track: any) => {\r\n                    return new DeezerTrack(track, true);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Fetches the missing data for a partial {@link DeezerPlaylist} as well as fetching all tracks.\r\n     * @returns The Deezer playlist object this method was called on.\r\n     */\r\n    async fetch(): Promise<DeezerPlaylist> {\r\n        if (!this.partial && (this.tracks.length === this.tracksCount || !this.public)) {\r\n            return this;\r\n        }\r\n\r\n        if (this.partial) {\r\n            const response = await request(`https://api.deezer.com/playlist/${this.id}/`).catch((err: Error) => err);\r\n\r\n            if (response instanceof Error) throw response;\r\n            const jsonData = JSON.parse(response);\r\n\r\n            this.partial = false;\r\n\r\n            this.description = jsonData.description;\r\n            this.durationInSec = jsonData.duration;\r\n            this.isLoved = jsonData.is_loved_track;\r\n            this.collaborative = jsonData.collaborative;\r\n            this.fans = jsonData.fans;\r\n\r\n            if (this.public) {\r\n                this.tracks = jsonData.tracks.data.map((track: any) => {\r\n                    return new DeezerTrack(track, true);\r\n                });\r\n            }\r\n        }\r\n\r\n        const currentTracksCount = this.tracks.length;\r\n        if (this.public && currentTracksCount !== this.tracksCount) {\r\n            let missing = this.tracksCount - currentTracksCount;\r\n\r\n            if (missing > 1000) missing = 1000;\r\n\r\n            const promises: Promise<DeezerTrack[]>[] = [];\r\n            for (let i = 1; i <= Math.ceil(missing / 100); i++) {\r\n                promises.push(\r\n                    new Promise(async (resolve, reject) => {\r\n                        const response = await request(\r\n                            `https://api.deezer.com/playlist/${this.id}/tracks?limit=100&index=${i * 100}`\r\n                        ).catch((err) => reject(err));\r\n\r\n                        if (typeof response !== 'string') return;\r\n                        const jsonData = JSON.parse(response);\r\n                        const tracks = jsonData.data.map((track: any) => {\r\n                            return new DeezerTrack(track, true);\r\n                        });\r\n\r\n                        resolve(tracks);\r\n                    })\r\n                );\r\n            }\r\n\r\n            const results = await Promise.allSettled(promises);\r\n            const newTracks: DeezerTrack[] = [];\r\n\r\n            for (const result of results) {\r\n                if (result.status === 'fulfilled') {\r\n                    newTracks.push(...result.value);\r\n                } else {\r\n                    throw result.reason;\r\n                }\r\n            }\r\n\r\n            this.tracks.push(...newTracks);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    toJSON() {\r\n        return {\r\n            id: this.id,\r\n            title: this.title,\r\n            public: this.public,\r\n            url: this.url,\r\n            picture: this.picture,\r\n            creationDate: this.creationDate,\r\n            type: this.type,\r\n            creator: this.creator,\r\n            tracksCount: this.tracksCount,\r\n            description: this.description,\r\n            durationInSec: this.durationInSec,\r\n            isLoved: this.isLoved,\r\n            collaborative: this.collaborative,\r\n            fans: this.fans,\r\n            tracks: this.tracks.map((track) => track.toJSON())\r\n        };\r\n    }\r\n}\r\n\r\nclass DeezerTrackAlbum {\r\n    id: number;\r\n    title: string;\r\n    url: string;\r\n    cover: DeezerImage;\r\n    releaseDate?: Date;\r\n\r\n    constructor(data: any) {\r\n        this.id = data.id;\r\n        this.title = data.title;\r\n        this.url = `https://www.deezer.com/album/${data.id}/`;\r\n        this.cover = {\r\n            xl: data.cover_xl,\r\n            big: data.cover_big,\r\n            medium: data.cover_medium,\r\n            small: data.cover_small\r\n        };\r\n\r\n        if (data.release_date) this.releaseDate = new Date(data.release_date);\r\n    }\r\n}\r\n\r\nclass DeezerArtist {\r\n    id: number;\r\n    name: string;\r\n    url: string;\r\n    picture?: DeezerImage;\r\n    role?: string;\r\n\r\n    constructor(data: any) {\r\n        this.id = data.id;\r\n        this.name = data.name;\r\n\r\n        this.url = data.link ? data.link : `https://www.deezer.com/artist/${data.id}/`;\r\n\r\n        if (data.picture_xl)\r\n            this.picture = {\r\n                xl: data.picture_xl,\r\n                big: data.picture_big,\r\n                medium: data.picture_medium,\r\n                small: data.picture_small\r\n            };\r\n\r\n        if (data.role) this.role = data.role;\r\n    }\r\n}\r\n"]}