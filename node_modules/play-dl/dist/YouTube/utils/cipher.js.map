{"version":3,"file":"cipher.js","sourceRoot":"","sources":["../../../play-dl/YouTube/utils/cipher.ts"],"names":[],"mappings":"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","sourcesContent":["import { URL } from 'url'\r\nimport { request } from './request'\r\nimport querystring from 'querystring'\r\n\r\ninterface formatOptions {\r\n  url? : string;\r\n  sp? : string;\r\n  signatureCipher? : string;\r\n  cipher?: string;\r\n  s? : string;\r\n}\r\nconst var_js = '[a-zA-Z_\\\\$][a-zA-Z_0-9]*';\r\nconst singlequote_js = `'[^'\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^'\\\\\\\\]*)*'`;\r\nconst duoblequote_js = `\"[^\"\\\\\\\\]*(:?\\\\\\\\[\\\\s\\\\S][^\"\\\\\\\\]*)*\"`;\r\nconst quote_js = `(?:${singlequote_js}|${duoblequote_js})`;\r\nconst key_js = `(?:${var_js}|${quote_js})`;\r\nconst prop_js = `(?:\\\\.${var_js}|\\\\[${quote_js}\\\\])`;\r\nconst empty_js = `(?:''|\"\")`;\r\nconst reverse_function = ':function\\\\(a\\\\)\\\\{' +\r\n'(?:return )?a\\\\.reverse\\\\(\\\\)' +\r\n'\\\\}';\r\nconst slice_function = ':function\\\\(a,b\\\\)\\\\{' +\r\n'return a\\\\.slice\\\\(b\\\\)' +\r\n'\\\\}';\r\nconst splice_function = ':function\\\\(a,b\\\\)\\\\{' +\r\n'a\\\\.splice\\\\(0,b\\\\)' +\r\n'\\\\}';\r\nconst swap_function = ':function\\\\(a,b\\\\)\\\\{' +\r\n'var c=a\\\\[0\\\\];a\\\\[0\\\\]=a\\\\[b(?:%a\\\\.length)?\\\\];a\\\\[b(?:%a\\\\.length)?\\\\]=c(?:;return a)?' +\r\n'\\\\}';\r\nconst obj_regexp = new RegExp(\r\n  `var (${var_js})=\\\\{((?:(?:${\r\n    key_js}${reverse_function}|${\r\n    key_js}${slice_function}|${\r\n    key_js}${splice_function}|${\r\n    key_js}${swap_function\r\n  }),?\\\\r?\\\\n?)+)\\\\};`)\r\nconst function_regexp = new RegExp(`${`function(?: ${var_js})?\\\\(a\\\\)\\\\{` +\r\n`a=a\\\\.split\\\\(${empty_js}\\\\);\\\\s*` +\r\n`((?:(?:a=)?${var_js}`}${\r\nprop_js\r\n}\\\\(a,\\\\d+\\\\);)+)` +\r\n`return a\\\\.join\\\\(${empty_js}\\\\)` +\r\n`\\\\}`);\r\nconst reverse_regexp = new RegExp(`(?:^|,)(${key_js})${reverse_function}`, 'm');\r\nconst slice_regexp = new RegExp(`(?:^|,)(${key_js})${slice_function}`, 'm');\r\nconst splice_regexp = new RegExp(`(?:^|,)(${key_js})${splice_function}`, 'm');\r\nconst swap_regexp = new RegExp(`(?:^|,)(${key_js})${swap_function}`, 'm');\r\n\r\nexport function js_tokens( body:string ) {\r\n  let function_action = function_regexp.exec(body)\r\n  let object_action = obj_regexp.exec(body)\r\n  if(!function_action || !object_action) return null\r\n\r\n  let object = object_action[1].replace(/\\$/g, '\\\\$')\r\n  let object_body = object_action[2].replace(/\\$/g, '\\\\$')\r\n  let function_body = function_action[1].replace(/\\$/g, '\\\\$')\r\n\r\n  let result = reverse_regexp.exec(object_body);\r\n  const reverseKey = result && result[1]\r\n  .replace(/\\$/g, '\\\\$')\r\n  .replace(/\\$|^'|^\"|'$|\"$/g, '');\r\n  \r\n  result = slice_regexp.exec(object_body)\r\n  const sliceKey = result && result[1]\r\n  .replace(/\\$/g, '\\\\$')\r\n  .replace(/\\$|^'|^\"|'$|\"$/g, '');\r\n\r\n  result = splice_regexp.exec(object_body);\r\n  const spliceKey = result && result[1]\r\n  .replace(/\\$/g, '\\\\$')\r\n  .replace(/\\$|^'|^\"|'$|\"$/g, '');\r\n\r\n  result = swap_regexp.exec(object_body);\r\n  const swapKey = result && result[1]\r\n  .replace(/\\$/g, '\\\\$')\r\n  .replace(/\\$|^'|^\"|'$|\"$/g, '');\r\n\r\n  const keys = `(${[reverseKey, sliceKey, spliceKey, swapKey].join('|')})`;\r\n  const myreg = `(?:a=)?${object\r\n  }(?:\\\\.${keys}|\\\\['${keys}'\\\\]|\\\\[\"${keys}\"\\\\])` +\r\n    `\\\\(a,(\\\\d+)\\\\)`;\r\n  const tokenizeRegexp = new RegExp(myreg, 'g');\r\n  const tokens = [];\r\n  while((result = tokenizeRegexp.exec(function_body)) !== null){\r\n    let key = result[1] || result[2] || result[3];\r\n    switch (key) {\r\n      case swapKey:\r\n        tokens.push(`sw${result[4]}`);\r\n        break;\r\n      case reverseKey:\r\n        tokens.push('rv');\r\n        break;\r\n      case sliceKey:\r\n        tokens.push(`sl${result[4]}`);\r\n        break;\r\n      case spliceKey:\r\n        tokens.push(`sp${result[4]}`);\r\n        break;\r\n    }\r\n  }\r\n  return tokens\r\n}\r\n\r\nfunction deciper_signature(tokens : string[], signature :string){\r\n  let sig = signature.split('')\r\n  let len = tokens.length\r\n  for(let i = 0; i < len; i++ ){\r\n    let token = tokens[i], pos;\r\n    switch(token.slice(0,2)){\r\n      case 'sw':\r\n        pos = parseInt(token.slice(2))\r\n        sig = swappositions(sig, pos)\r\n        break\r\n      case 'rv':\r\n        sig = sig.reverse()\r\n        break\r\n      case 'sl':\r\n        pos = parseInt(token.slice(2))\r\n        sig = sig.slice(pos)\r\n        break\r\n      case 'sp':\r\n        pos = parseInt(token.slice(2))\r\n        sig.splice(0, pos)\r\n        break\r\n    }\r\n  }\r\n  return sig.join('')\r\n}\r\n\r\n\r\nfunction swappositions(array : string[], position : number){\r\n  let first = array[0]\r\n  array[0] = array[position]\r\n  array[position] = first\r\n  return array\r\n}\r\n\r\nfunction download_url(format: formatOptions, sig : string){\r\n  let decoded_url;\r\n  if(!format.url) return;\r\n  decoded_url = format.url\r\n\r\n  decoded_url = decodeURIComponent(decoded_url)\r\n\r\n  let parsed_url = new URL(decoded_url)\r\n  parsed_url.searchParams.set('ratebypass', 'yes');\r\n\r\n  if(sig){\r\n    parsed_url.searchParams.set(format.sp || 'signature', sig)\r\n  }\r\n  format.url = parsed_url.toString();\r\n}\r\n\r\nexport async function format_decipher(formats: formatOptions[], html5player : string){\r\n  let body = await request(html5player)\r\n  let tokens = js_tokens(body)\r\n  formats.forEach((format) => {\r\n    let cipher = format.signatureCipher || format.cipher;\r\n    if(cipher){\r\n      Object.assign(format, querystring.parse(cipher))\r\n      delete format.signatureCipher;\r\n      delete format.cipher;\r\n    }\r\n    let sig;\r\n    if(tokens && format.s){\r\n      sig = deciper_signature(tokens, format.s)\r\n      download_url(format, sig)\r\n      delete format.s\r\n      delete format.sp\r\n    }\r\n  });\r\n  return formats\r\n}"]}